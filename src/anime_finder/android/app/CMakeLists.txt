cmake_minimum_required(VERSION 3.16.0)

project(dart_torrent LANGUAGES CXX C)

set(ROOT_PATH ${CMAKE_CURRENT_LIST_DIR}/../../lib/dart_torrent)
set(SRC_PATH ${ROOT_PATH}/src/)
set(CMAKE_CXX_FLAGS "${CMAKE_CXX_FLAGS} -fvisibility=default -Dencryption=ON -DFMT_HEADER_ONLY -DTORRENT_HAVE_MMAP=0 -DTORRENT_NO_DEPRECATE -DTORRENT_DISABLE_SUPERSEEDING -DTORRENT_DISABLE_SHARE_MODE -DBOOST_ALL_NO_LIB -DBOOST_ASIO_ENABLE_CANCELIO -DBOOST_ASIO_HAS_STD_CHRONO -DBOOST_MULTI_INDEX_DISABLE_SERIALIZATION -DBOOST_NO_DEPRECATED -DBOOST_SYSTEM_NO_DEPRECATED")
set(CMAKE_CXX_STANDARD 14)
set(CMAKE_C_STANDARD 11)
#set(CMAKE_BUILD_TYPE Release)

set(OPENSSL_INCLUDE_DIR "${ROOT_PATH}/build/openssl/include")
set(OPENSSL_CFG_INCLUDE_DIR "${ROOT_PATH}/build/openssl/build/${CMAKE_ANDROID_ARCH_ABI}/include")
set(LIBTORRENT_INCLUDE_DIR "${ROOT_PATH}/build/libtorrent/include")
set(Boost_INCLUDE_DIR "${ROOT_PATH}/lib/android/boost/${CMAKE_ANDROID_ARCH_ABI}/include/boost-1_78")
set(FMT_INCLUDE_DIR "${ROOT_PATH}/external/fmt/include")
set(SQLITE3_INCLUDE_DIR "${ROOT_PATH}/external/sqlite3")

add_definitions(-DTORRENT_USE_OPENSSL -DFMT_HEADER_ONLY -DTORRENT_HAVE_MMAP=0 -DTORRENT_NO_DEPRECATE -DTORRENT_DISABLE_SUPERSEEDING -DTORRENT_DISABLE_SHARE_MODE -DBOOST_ALL_NO_LIB -DBOOST_ASIO_ENABLE_CANCELIO -DBOOST_ASIO_HAS_STD_CHRONO -DBOOST_MULTI_INDEX_DISABLE_SERIALIZATION -DBOOST_NO_DEPRECATED -DBOOST_SYSTEM_NO_DEPRECATED -DNDEBUG)

include_directories(${SQLITE3_INCLUDE_DIR} ${FMT_INCLUDE_DIR} ${Boost_INCLUDE_DIR} ${LIBTORRENT_INCLUDE_DIR} ${OPENSSL_INCLUDE_DIR} ${OPENSSL_CFG_INCLUDE_DIR})
file(GLOB_RECURSE SRC_FILES ${SRC_PATH}/*.cpp ${SRC_PATH}/*.c)
if ("${CMAKE_BUILD_TYPE}" STREQUAL "Debug")
    set(CMAKE_CXX_FLAGS "${CMAKE_CXX_FLAGS} -g3 -O0")
    set(LIBTORRENT_PATH_SUFFIX "/debug")
else()
    set(CMAKE_CXX_FLAGS "${CMAKE_CXX_FLAGS} -O3 -DNDEBUG")
    set(LIBTORRENT_PATH_SUFFIX "")
endif()
file(GLOB LIBS ${ROOT_PATH}/lib/android/libtorrent/${CMAKE_ANDROID_ARCH_ABI}${LIBTORRENT_PATH_SUFFIX}/*.so ${ROOT_PATH}/lib/android/openssl/${CMAKE_ANDROID_ARCH_ABI}/*.so)

add_library(dart_torrent SHARED ${SRC_FILES})
target_link_libraries(dart_torrent ${LIBS})